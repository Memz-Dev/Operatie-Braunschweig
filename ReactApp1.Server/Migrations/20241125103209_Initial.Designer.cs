// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ReactApp1.Server.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241125103209_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ReactApp1.Server.Classes.Account", b =>
                {
                    b.Property<int>("accountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.Property<string>("gebruikersNaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("wachtwoord")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("accountId");

                    b.ToTable("Account");

                    b.HasDiscriminator().HasValue("Account");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ReactApp1.Server.Classes.Auto", b =>
                {
                    b.Property<int>("voertuigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("aanschafJaar")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dueren")
                        .HasColumnType("INTEGER");

                    b.Property<string>("kleur")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("merk")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("voertuigId");

                    b.ToTable("Autos");
                });

            modelBuilder.Entity("ReactApp1.Server.Classes.Camper", b =>
                {
                    b.Property<int>("voertuigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("aanschafJaar")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("heeftToilet")
                        .HasColumnType("INTEGER");

                    b.Property<string>("kleur")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("merk")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("voertuigId");

                    b.ToTable("Campers");
                });

            modelBuilder.Entity("ReactApp1.Server.Classes.Caravan", b =>
                {
                    b.Property<int>("voertuigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("aanschafJaar")
                        .HasColumnType("INTEGER");

                    b.Property<int>("gewicht")
                        .HasColumnType("INTEGER");

                    b.Property<string>("kleur")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("merk")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("voertuigId");

                    b.ToTable("Caravans");
                });

            modelBuilder.Entity("ReactApp1.Server.Classes.HuurAanvraag", b =>
                {
                    b.Property<int>("huurAanvraagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("accountid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("eindbestemming")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("huisnummer")
                        .HasColumnType("INTEGER");

                    b.Property<string>("huurreden")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("postcode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("rijbewijsnummer")
                        .HasColumnType("INTEGER");

                    b.Property<string>("straatnaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("verwachtingreisafstand")
                        .HasColumnType("INTEGER");

                    b.HasKey("huurAanvraagId");

                    b.HasIndex("accountid");

                    b.ToTable("HuurAanvraags");
                });

            modelBuilder.Entity("ReactApp1.Server.Classes.BedrijfsAccount", b =>
                {
                    b.HasBaseType("ReactApp1.Server.Classes.Account");

                    b.Property<string>("adres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("bedrijfId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("bedrijfsNaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("kvkNummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("BedrijfsAccount");
                });

            modelBuilder.Entity("ReactApp1.Server.Classes.BeheerdersAccount", b =>
                {
                    b.HasBaseType("ReactApp1.Server.Classes.Account");

                    b.HasDiscriminator().HasValue("BeheerdersAccount");
                });

            modelBuilder.Entity("ReactApp1.Server.Classes.HuurdersAccount", b =>
                {
                    b.HasBaseType("ReactApp1.Server.Classes.Account");

                    b.Property<string>("adres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("emailAdres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("naam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("telefoonnummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Account", t =>
                        {
                            t.Property("adres")
                                .HasColumnName("HuurdersAccount_adres");
                        });

                    b.HasDiscriminator().HasValue("HuurdersAccount");
                });

            modelBuilder.Entity("ReactApp1.Server.Classes.MedewerkersAccount", b =>
                {
                    b.HasBaseType("ReactApp1.Server.Classes.Account");

                    b.Property<string>("rol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("MedewerkersAccount");
                });

            modelBuilder.Entity("ReactApp1.Server.Classes.HuurAanvraag", b =>
                {
                    b.HasOne("ReactApp1.Server.Classes.Account", "account")
                        .WithMany()
                        .HasForeignKey("accountid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("account");
                });
#pragma warning restore 612, 618
        }
    }
}
