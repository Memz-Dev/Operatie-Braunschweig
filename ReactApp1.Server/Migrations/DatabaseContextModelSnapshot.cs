// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ReactApp1.Server.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ReactApp1.Server.Classes.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.Property<string>("Wachtwoord")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("AccountId");

                    b.ToTable("Account", (string)null);

                    b.HasDiscriminator().HasValue("Account");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ReactApp1.Server.Classes.Auto", b =>
                {
                    b.Property<int>("voertuigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("aanschafJaar")
                        .HasColumnType("INTEGER");

                    b.Property<int>("aantalDeuren")
                        .HasColumnType("INTEGER");

                    b.Property<string>("kleur")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("merk")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("voertuigId");

                    b.ToTable("Autos", (string)null);
                });

            modelBuilder.Entity("ReactApp1.Server.Classes.Camper", b =>
                {
                    b.Property<int>("voertuigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("aanschafJaar")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("heeftToilet")
                        .HasColumnType("INTEGER");

                    b.Property<string>("kleur")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("merk")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("voertuigId");

                    b.ToTable("Campers", (string)null);
                });

            modelBuilder.Entity("ReactApp1.Server.Classes.Caravan", b =>
                {
                    b.Property<int>("voertuigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Bedden")
                        .HasColumnType("INTEGER");

                    b.Property<int>("aanschafJaar")
                        .HasColumnType("INTEGER");

                    b.Property<string>("kleur")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("merk")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("voertuigId");

                    b.ToTable("Caravans", (string)null);
                });

            modelBuilder.Entity("ReactApp1.Server.Classes.HuurAanvraag", b =>
                {
                    b.Property<int>("huurAanvraagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BedrijfsAccountAccountId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HuurdersAccountAccountId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("accountid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("eindbestemming")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("huisnummer")
                        .HasColumnType("INTEGER");

                    b.Property<string>("huurreden")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("postcode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("rijbewijsnummer")
                        .HasColumnType("INTEGER");

                    b.Property<string>("straatnaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("verwachtingreisafstand")
                        .HasColumnType("INTEGER");

                    b.HasKey("huurAanvraagId");

                    b.HasIndex("BedrijfsAccountAccountId");

                    b.HasIndex("HuurdersAccountAccountId");

                    b.HasIndex("accountid");

                    b.ToTable("HuurAanvragen", (string)null);
                });

            modelBuilder.Entity("ReactApp1.Server.Classes.BedrijfsAccount", b =>
                {
                    b.HasBaseType("ReactApp1.Server.Classes.Account");

                    b.Property<string>("adres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("bedrijfId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("bedrijfsNaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("kvkNummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("BedrijfsAccount");
                });

            modelBuilder.Entity("ReactApp1.Server.Classes.BeheerdersAccount", b =>
                {
                    b.HasBaseType("ReactApp1.Server.Classes.Account");

                    b.HasDiscriminator().HasValue("BeheerdersAccount");
                });

            modelBuilder.Entity("ReactApp1.Server.Classes.HuurdersAccount", b =>
                {
                    b.HasBaseType("ReactApp1.Server.Classes.Account");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAdres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefoonnummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("HuurdersAccount");
                });

            modelBuilder.Entity("ReactApp1.Server.Classes.MedewerkersAccount", b =>
                {
                    b.HasBaseType("ReactApp1.Server.Classes.Account");

                    b.Property<string>("rol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("MedewerkersAccount");
                });

            modelBuilder.Entity("ReactApp1.Server.Classes.HuurAanvraag", b =>
                {
                    b.HasOne("ReactApp1.Server.Classes.BedrijfsAccount", null)
                        .WithMany("aanvragen")
                        .HasForeignKey("BedrijfsAccountAccountId");

                    b.HasOne("ReactApp1.Server.Classes.HuurdersAccount", null)
                        .WithMany("Aanvragen")
                        .HasForeignKey("HuurdersAccountAccountId");

                    b.HasOne("ReactApp1.Server.Classes.Account", "account")
                        .WithMany()
                        .HasForeignKey("accountid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("account");
                });

            modelBuilder.Entity("ReactApp1.Server.Classes.BedrijfsAccount", b =>
                {
                    b.Navigation("aanvragen");
                });

            modelBuilder.Entity("ReactApp1.Server.Classes.HuurdersAccount", b =>
                {
                    b.Navigation("Aanvragen");
                });
#pragma warning restore 612, 618
        }
    }
}
